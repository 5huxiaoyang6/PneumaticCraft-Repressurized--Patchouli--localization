{
  "name": "基础教程 #1",
  "icon": "minecraft:knowledge_book",
  "category": "programming",
  "priority": "true",
  "advancement": "pneumaticcraft:programmer",
  "pages": [
    {
      "type": "text",
      "text": "在本教程中, 我们会编写一个简单的, 用 $(l:tools/drone)无人机/$ 实现区域挖掘的程序. 在开始之前, 你需要准备:"
    },
    {
      "type": "text",
      "text": "$(li)一个 $(l:programming/programmer)编程台/$ (这是当然的)$(li)(如果你不是创造模式) 一个 $(item)箱子/$ 贴着编程台放置并在其中存有以下的 $(l:programming/puzzle_pieces)编程拼图/$:$(li2)2 $(2)绿色/$ 编程拼图$(li2)1 $(6)棕色/$ 编程拼图$(li2)1 $(1)蓝色/$ 编程拼图$(li2)1 $(7)灰色/$ 编程拼图$(li2)1 $(a)黄绿色/$ 编程拼图$(li)一个 $(item)箱子/$ 或其他容器, 其中包含一把任意类型的 $(item)铲子/$$(li)一个 $(l:tools/gps_tool)定位工具/$ 和一个 $(l:tools/gps_area_tool)区域定位工具/$"
    },
    {
      "type": "text",
      "text": "打开 $(l:programming/programmer)编程台/$ 的 GUI. 在右侧, 你会看到一个程序部件 $(thing)托盘/$ $(ttcolor)$(t:在 GUI 内, 虚拟的拼图称为编程部件)/$. 这里有好几页; 你可以使用托盘下方的箭头按钮进行循环展示, 或者按下 $(thing)空格/$ 或 $(thing)Tab键/$ 展示所有.$(p)展开后, 文本框会出现在托盘上方，你可以在这里输入 $(thing)过滤/$ 文本来搜索部件. 现在在那里输入'开始': 你会看到只有一个部件没有变 $(7)灰/$."
    },
    {
      "type": "text",
      "text": "现在拖拽 $(l:programming/start)开始/$ 部件到主编程区域. 它会被附着上 $(4)红色边框/$, 将鼠标移动到上面查看出现的问题.$(p)对, 现在没有部件连接在其底部 - 通过创造我们的程序需要矫正错误.$(p)找到 $(l:programming/inventory_import)从容器提取物品/$ 部件并将他拖到 $(thing)开始/$ 部件正下方."
    },
    {
      "type": "text",
      "text": "如果你将它们放置的足够近, 它会 '咬住' $(thing)开始/$ 部件的底部. 请注意连接是如何匹配的, 如同拼图游戏一样; 因此得名 $(thing)程序拼图/$.$(p)接下来, 拖动 $(l:programming/area)区域/$ 并将其连接到 $(thing)输入/$ 部件的右侧 ($(ttcolor)$(t:连接在部件左侧的被视为黑名单, 而右侧则是白名单)不是左侧/$) , 然后 $(l:programming/item_filter)物品过滤器/$ 部件, 也放置在 $(thing)输入/$ 部件的左侧. 还要再次确保它们 '咬合' 在一起."
    },
    {
      "type": "text",
      "text": "你会注意到 $(thing)区域/$ 部件最开始也被附着上了 $(4)红色边框/$, 因为它还没有被定义区域. 带上你的 $(item)定位工具/$, 然后 $(thing)潜行+右击/$ 之前放置了 $(item)铲子/$ 的 $(item)箱子/$. 你会看到这个位置被高亮提示了.$(p)现在, 在编程台 GUI 内, 用 $(item)定位工具/$ $(thing)左击/$ $(thing)区域/$ 部件: 你会看到位置信息被复制到了 $(thing)区域/$ 部件内!"
    },
    {
      "type": "text",
      "text": "现在对于 $(thing)物品过滤器/$: $(thing)右击/$ 它来打开设置 GUI. 点击 $(bold)Search Item.../$ 按钮, 然后在搜索框内输入'铲'. 选择你之前在箱子里放入的铲子, 然后按下 $(thing)ESC键/$ 关闭搜索框.$(p)返回 $(thing)物品过滤器/$ 窗口, 确保 'Use metadata...' $(italic)没有勾选/$, 因此它也会与使用过的铲子匹配. 再次按下 $(thing)ESC键/$: 返回主 GUI."
    },
    {
      "type": "text",
      "text": "此时, 我们告诉了无人机去箱子里拾取铲子; 现在需要让它开始挖掘!$(p)拖拽 $(l:programming/dig)挖掘方块/$ 部件并咬合到 $(thing)输入/$ 部件底部.$(p)拖拽一个新的 $(thing)区域/$ 部件咬合在 $(thing)挖掘/$ 部件的右侧."
    },
    {
      "type": "text",
      "text": "来让我们定义一个范围用于挖掘: 带上你的 $(thing)区域定位工具/$ 然后 $(thing)右击/$ 一个方块来设定区域的一个角. $(thing)左击/$ 另一个方块定义第二个角. 不要让区域过大, 并且尽量让其包含泥土/沙子.$(p)确保高亮的区域是一个 $(thing)立方体/$ - 这是默认的, 但你可以对着空气 $(thing)左/右击/$ 工具来打开 GUI, 在这里你能够设定区域形状"
    },
    {
      "type": "text",
      "text": "回到编程台 GUI, 用 $(thing)区域定位工具/$ $(thing)左击/$ 连接在 $(thing)挖掘/$ 上的 $(thing)区域/$ 部件. 和之前一样, 你会看到区域信息被复制到了区域部件上.$(p)现在, 不应该有红色高亮以提示任何错误: 恭喜, 你编写了一个有效的程序!"
    },
    {
      "type": "text",
      "text": "最后, 准备一台 $(l:tools/drone)无人机/$, 并让其在 $(l:machines/charging_station)充气台内/$ 冲满. 把无人机放在编程台 GUI 右上角的槽位然后点击 $(thing)⟶ (输出)/$ 按钮 (如果有需要你可以在左侧的文本框为其命名).$(p)你会得到一些声音上的反馈, 然后你的无人机就编写完成了!"
    },
    {
      "type": "text",
      "text": "剩下的就是部署你的无人机了: 在临近箱子的位置 $(thing)右击/$ , 然后看着它去工作!"
    }
  ]
}